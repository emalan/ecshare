<?xml version="1.0"?>
<!--
  Build file to consolidate common elements among projects.
  Import file from your build script.
  
  You will need to setup a build.properties in your project folder.
-->
<project name="Share" basedir=".">
    <property file="build.properties"/>
    
    <property name="javac.target" value="1.5" />
    <property name="javac.source" value="1.5" />
  
    <property name="build-tomcat" value="${share.dir}/build-tomcat.xml"  />

	<property name="build.dir" value="target" />
	<property name="build.main.classes" value="${build.dir}/classes" />

	<property name="src.share.dir" value="${share.dir}/src" />
	<property name="src.share.resources" value="${share.dir}/resources" />
	
	<property name="version.num" value="0.01" />

    <target name="tag" description="Increment build and tag version control">
        <echo>Tagging git repository : ${version.num}-b${build.number}</echo>
       	<exec executable="/usr/local/git/bin/git" dir="${share.dir}">
   	       <arg value="tag"/>
   	       <arg value="${version.num}-b${build.number}"/>
	   	 </exec>
    </target>
	
	<target name="clean" description="o Cleans up the build artifacts">
		<delete dir="${build.dir}" failonerror="false" />
		<delete file="${final.name}.war" failonerror="false" />
	</target>

	<target name="init" description="o Creates all directories for building">
		<mkdir dir="${build.dir}" />
	</target>
	
	<target name="compile" depends="clean, init" description="o Compiles the Java sources">
		<mkdir dir="${build.main.classes}" />
		<javac destdir="${build.main.classes}"
			target="${javac.target}"
			source="${javac.source}"
			debug="true"
			deprecation="true"
			optimize="false"
			excludes="**/package.html"
			classpathref="build.classpath"
		    srcdir="${src.main.dir}">
		    <src path="${src.share.dir}"/>
		    <src path="${src.share.resources}"/>
		</javac>
		
		<copy todir="${build.main.classes}">
			<fileset dir="${src.main.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${src.share.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${src.share.resources}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	
	<target name="war-common" depends="compile" description="o Creates a WAR file for this package">
		<buildnumber file="${share.dir}/src/build.properties" />
		<antcall target="tag"></antcall>
		<war destfile="${build.dir}/${final.name}.war" 
			webxml="${src.web.dir}/WEB-INF/prodweb.xml"
			excludes="**/package.html">
			<manifest>
	        	<attribute name="Built-By" value="${user.name}"/>
	        	<attribute name="Implementation-Version" 
	                 value="${version.num}-b${build.number}"/>         
	    	</manifest>
			<classes dir="${build.main.classes}"/>
			<fileset dir="${src.web.dir}">
				<include name="**/*"/>
				<exclude name="**/web.xml" />
				<exclude name="**/prodweb.xml" />
			</fileset>
			<lib dir="${share.dir}/wicket"/>
			<lib dir="${share.dir}/spring">
				<include name="**/*.jar"></include>
			</lib>
			<lib dir="${share.dir}/common">
				<include name="**/*.jar"></include>
			</lib>
    	    <lib dir="${share.dir}/ddlutils">
    	           <include name="**/*.jar"></include>
    	    </lib>
            <lib dir="${share.dir}/jackrabbit">
                <include name="jcr-1.0.jar"></include>
                <include name="jackrabbit-*.jar"></include>
                <include name="lucene-core*.jar"></include>
                <include name="slf4j*.jar"></include>
                <include name="concurrent*.jar"></include>
                <include name="mysql*.jar"></include>
            </lib>
			<lib dir="${share.dir}/container">
			   <include name="cglib*.jar"></include>
			</lib>
		</war>
		<copy file="${build.dir}/${final.name}.war" tofile="${build.dir}/ROOT.war"/>
	</target>
	
	<target name="deploy-war">
		<echo message="Deploy server is : ${deployto.server}"></echo>
		<echo message="war name : ${war.name}"></echo>
		<scp file="${war.name}" todir="ubuntu@${deployto.server}:/vol/install/java/stage/war/" keyfile="/Users/emalan/.ec2/emalan.pem" passphrase="" >
		</scp>
	</target>
	

</project>
